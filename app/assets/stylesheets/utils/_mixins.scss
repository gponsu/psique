// ...
// @access public
@mixin span-columns($columns) {
  @include flex(0 0 auto);
  @include flex-basis(percentage($columns / $grid-columns));
  max-width: percentage($columns / $grid-columns);
  padding-left: ($grid-gutter / 2);
  padding-right: ($grid-gutter / 2);
}

/// Simple media queries.
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin media($breakpoint) {
  $min-width: map-get($breakpoints, $breakpoint);

  @if $min-width {
    @media (min-width: #{$min-width}) {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$breakpoints` variable.';
  }
}

// ...
// @access public
@mixin grid-columns {
  $medias: join(null, zip(map-keys($breakpoints), $grid-defaults));

  @each $media in $medias {
    @include columns($media);
  }
}

// ...
// @access private
@mixin columns($media: null) {
  @for $columns from 1 through $grid-columns {
    @if $media {
      .grid-col-#{$columns}--#{nth($media, 2)} {
        @include media(nth($media, 1)) {
          @include span-columns($columns);
        }
      }
    } @else {
      .grid-col-#{$columns} {
        @include span-columns($columns);
      }
    }
  }
}
